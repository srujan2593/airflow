name: Automated Tagging and Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
    

jobs:
  create-tag-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set IMAGE_TAG for different event types
      - name: Set IMAGE_TAG for non-release events
        if: github.event_name != 'pull_request' && github.event_name != 'release'
        shell: bash
        run: |
          TEMP=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "IMAGE_TAG=${TEMP//\//-}-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Set IMAGE_TAG with image_name
        if: inputs.image_name != 'none' && github.event_name != 'pull_request' && github.event_name != 'release'
        shell: bash
        run: |
          TEMP="${{ inputs.image_name }}-${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          echo "IMAGE_TAG=${TEMP//\//-}-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Set IMAGE_TAG (on pull_request event)
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          TEMP=${{ github.event.pull_request.head.ref }}
          echo "IMAGE_TAG=${TEMP//\//-}-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Set IMAGE_TAG (on release event)
        if: github.event_name == 'release'
        shell: bash
        run: |
          echo "IMAGE_TAG=release-${{ github.event.release.tag_name }}-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create and push annotated tag
        run: |
          git config --global user.email "srujan@github.com"
          git config --global user.name "GitHub Actions"
          git tag -a $IMAGE_TAG -m "Tag created by GitHub Actions for deployment"
          git push origin $IMAGE_TAG
    

    #   # Step 4: Update Helm values with the created tag for git-sync `rev` and deploy
    #   - name: Deploy to Dev
    #     run: |
    #       helm upgrade airflow-dev ./helm-chart \
    #         --namespace airflow \
    #         --set gitSync.rev=$IMAGE_TAG \
    #         --set gitSync.repo=https://github.com/your-org/airflow-dags.git

    #   # Additional steps for QA, train, etc. can follow
